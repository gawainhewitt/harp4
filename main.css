:root {
  --black: rgb(0, 0, 0);
  --orange: rgb(230, 159, 0);
  --skyblue: rgb(86, 180, 233);
  --bluishgreen: rgb(0, 158, 115);
  --yellow: rgb(240, 228, 66);
  --blue: rgb(0, 114, 178);
  --vermillion: rgb(213, 94, 0);
  --reddishpurple: rgb(204, 121, 167);

  --backgroundcolour: var(--yellow);
  --stringcolour: var(--reddishpurple);
  --zerochordcolour: var(--orange);
  --onechordcolour: var(--skyblue);
  --twochordcolour: var(--vermillion);
  --threechordcolour: var(--bluishgreen);

  --chordnamecolour: var(--black);

  --buttoncolour: var(--reddishpurple);
}

* {
  font-family: Helvetica, sans-serif;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

p {
  font-family: Arial, Helvetica, sans-serif;
  padding: 2px;
  text-align: center;
  /* font-size: 0.5em; */
  color: black;
}

h1 {
  font-family: Arial, Helvetica, sans-serif;
  padding: 2px;
  text-align: center;
  font-size: 4em;
  color: black;
}

.topbox {
  /* we are using vh for a fixed knowable height relative to the window. Therefore :root, html and body % settings are irrelevant */
  height: 10vh;
  height: calc(var(--vh, 1vh) * 10);
  background: var(--backgroundcolour);
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

#inner-top-box {
  display: flex;
  justify-content: space-around;
}

#chord-container {
  /* we are using vh for a fixed knowable height relative to the window. Therefore :root, html and body % settings are irrelevant */
  height: 80vh;
  height: calc(var(--vh, 1vh) * 80);
  display: grid;
  grid-template-columns: 3fr 16fr 1fr;
  /* background: var(--backgroundcolour); */
}

.bottombox {
  height: 10vh;
  height: calc(var(--vh, 1vh) * 10);
  background: var(--backgroundcolour);
}

.rightspace {
  flex: 1;
  flex-direction: column;
  justify-content: space-around;
}

.stringscontainer {
  flex: 20;
  flex-direction: row;
  justify-content: space-around;
}

.chord0colour {
  background-color: var(--zerochordcolour);
}

.chord1colour {
  background-color: var(--onechordcolour);
}

.chord2colour {
  background-color: var(--twochordcolour);
}

.chord3colour {
  background-color: var(--threechordcolour);
}

.chordname {
  font-size: 1em;
  text-align: center;
  color: var(--chordnamecolour);
}

.chordtype {
  text-align: center;
  color: var(--chordnamecolour);
}

.invisible {
  display: none;
}

.flex {
  display: flex;
}

.flexcolumn {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.zero {
  background: var(--zerochordcolour);
  flex: 1;
  flex-direction: column;
  justify-content: space-around;
}

.one {
  background: var(--onechordcolour);
  flex: 1;
  flex-direction: column;
  justify-content: space-around;
}

.two {
  background: var(--twochordcolour);
  flex: 1;
  flex-direction: column;
  justify-content: space-around;
}

.three {
  background: var(--threechordcolour);
  flex: 1;
  flex-direction: column;
  justify-content: space-around;
}

.string {
  background: var(--stringcolour);
  width: 2vw;
}

@media (max-width: 800px) {
  .string {
    width: 4vw;
  }
}

p {
  text-align: center;
  font-size: 2em;
}

.optionscreen {
  margin: 0 auto;
  background: var(--backgroundcolour);
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
  width: 100vw;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  z-index: 10;
  position: absolute;
}

.optionszero {
  height: 10vh;
  height: calc(var(--vh, 1vh) * 10);
  background: var(--backgroundcolour);
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.optionsone {
  background: var(--backgroundcolour);
  height: 80vh;
  height: calc(var(--vh, 1vh) * 80);
  width: 100vw;
  display: grid;
  grid-template-columns: 25% 20% 5% 20% 10% 20%;
  justify-content: space-around;
}

.optionstwo {
  height: 10vh;
  height: calc(var(--vh, 1vh) * 10);
  background: var(--backgroundcolour);
}

.startscreen {
  margin: 0 auto;
  background: white;
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
  width: 100vw;
  display: grid;
  grid-template-columns: repeat(12, [col-start] 1fr);
  grid-template-rows: auto;
  grid-template-areas:
    ". . . . orchlogo orchlogo orchlogo orchlogo . . . ."
    ". . text text text text text text text text . ."
    ". . lpologo lpologo lpolog . . dmlogo dmlogo dmlogo . .";
  z-index: 10;
  position: absolute;
}

#orchlablogo {
  grid-area: orchlogo;
  width: 100%;
}

#lpologo {
  grid-area: lpologo;
  width: 100%;
}

#dmlogo {
  grid-area: dmlogo;
  width: 60%;
  justify-self: end;
}

#infotext {
  grid-area: text;
  /* font-size: 1em; */
  text-align: center;
}

.backbutton {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

/* button styling */

.button-style {
  width: 120px;
  height: 56px;
  line-height: 58px;
  font-size: 20px;
  font-family: "Bebas Neue", sans-serif;
  background: linear-gradient(45deg, transparent 5%, var(--buttoncolour) 5%);
  border: 0;
  color: var(--black);
  letter-spacing: 3px;
  box-shadow: 6px 0px 0px var(--blue);
  outline: transparent;
  position: relative;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
}

@media (min-width: 768px) {
  .button-style {
    width: 200px;
    height: 86px;
    line-height: 88px;
  }
  .chordname {
    font-size: 3em;
  }
}

/* toggle styling */

/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

input:checked + .slider {
  background-color: #2196f3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196f3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}
